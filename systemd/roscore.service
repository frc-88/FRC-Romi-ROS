[Unit]
After=NetworkManager.service time-sync.target
Description=roscore

[Service]
Type=forking
User=pi
Group=pi
# Start roscore as a fork and then wait for the tcp port to be opened
# —————————————————————-
# Source all the environment variables, start roscore in a fork
# Since the service type is forking, systemd doesn’t mark it as
# 'started' until the original process exits, so we have the
# non-forked shell wait until it can connect to the tcp opened by
# roscore, and then exit, preventing conflicts with dependant services
ExecStart=/etc/systemd/system/ros/bin/roscore.sh
Restart=no
KillSignal=SIGINT
TimeoutStopSec=3
FinalKillSignal=SIGKILL

[Install]
WantedBy=multi-user.target
